<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>box = spr_box
item = spr_item
width = 10
height = 2
boxwidth = sprite_get_width(box)
boxheight = sprite_get_height(box)
horzpos = 0
vertpos = 0
color = c_white
font = fnt_inv

x = room_width/2 - (width*boxwidth)/2
y = room_height - 100

for (var a = 0; a &lt; height; a +=1){
  for (var b = 0; b &lt; width; b +=1){
    inv[a,b] = -1
    stack[a,b] = 0
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>horzpos -= max(keyboard_check_pressed(ord("A")),keyboard_check_pressed(vk_left),0)
horzpos += max(keyboard_check_pressed(ord("D")),keyboard_check_pressed(vk_right),0)
vertpos += max(keyboard_check_pressed(ord("S")),keyboard_check_pressed(vk_down),0)
vertpos -= max(keyboard_check_pressed(ord("W")),keyboard_check_pressed(vk_up),0)

click = max(mouse_check_button_pressed(mb_left),0)

test = max(keyboard_check_pressed(ord("F")),0)

if (horzpos &gt; width - 1) horzpos = width - 1
if (vertpos &gt; height - 1) vertpos = height - 1

if (horzpos &lt; 0) horzpos = 0
if (vertpos &lt; 0) vertpos = 0

if (test){
  theitem = irandom(sprite_get_number(item))
  for (var a = 0; a &lt; height; a +=1){
    for (var b = 0; b &lt; width; b +=1){
      switch(inv[a,b]){
        case theitem:{
          stack[a,b] += 1
          return 0
          break
        }
        case -1:{
          inv[a,b] = theitem
          return 0
          break
        }
      }
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(color)
draw_set_font(font)

for (var a = 0; a &lt; height; a += 1){
  for (var b = 0; b &lt; width; b += 1){
    var horz = x + b*boxwidth
    var vert = y + a*boxheight
    draw_sprite(box,0,horz,vert)
    if (inv[a,b] &gt; -1){
      draw_sprite(item,inv[a,b],horz,vert)
      draw_text(horz-2,vert-2,stack[a,b])
    }
  }
}

draw_sprite(box,1,x + horzpos*boxwidth,y + vertpos*boxheight)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
